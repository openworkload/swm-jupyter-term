<style>
#swm-settings label p {
    font-weight: normal;
}
.filter-container {
    border: 0px solid gray;
    padding: 20px;
    position: relative;
    transition: all 0.3s ease;
}
.flavor-table-container {
    max-height: 400px;
    overflow-y: auto;
    margin-left: 10px;
    flex-direction: column;
}
.flavor-table-header {
    border: 1px solid gray;
    background-color: #FAFFFB;
    table-layout: fixed;
}
.flavor-table {
    width: 100%;
    border: 1px solid gray;
    padding: 10px;
    position: relative;
    transition: all 0.3s ease;
    background-color: #FAFFFF;
    table-layout: fixed;
}
.flavor-row-selected {
  background-color: #99ff99;
}
.hidden {
    display: none;
}
table {
    border-collapse: collapse;
    transition: all 0.3s ease;
}

.filter-box {
    border: 1px solid #ccc;
    border-radius: 3px;
    padding: 10px;
}
.filter-box legend {
    color: grey;
    border: none;
    padding: 0 10px;
    font-weight: bold;
    font-size: 10px;
    display: inline-block;
    width: 60px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}
.filter-label {
    color: grey;
    font-size: 13px;
    font-weight: normal;
}
.filter-input-group {
    display: flex;
    gap: 10px;
}
.filter-input-group input {
    padding: 1px;
    border: 1px solid #ccc;
    border-radius: 3px;
    font-size: 12px;
}
.filter-input-group input:focus {
    outline: none;
    border-color: #4a90e2;
    box-shadow: 0 0 5px rgba(74, 144, 226, 0.3);
}
</style>


<div class='form-group' id='swm-settings' style="background-color:#f0f5f5; padding: 10px;">

    <p>
        <label for="files">1. Select notebooks local directory: </label>
        <br>
        <input type="file" accept=".ipynb" id="files" name="files[]" multiple style="display: none;"/>
        <input type="button" value="Browse..." onclick="document.getElementById('files').click();" />
        <div style="margin:20px">
            <pre id="filelist" style="display:none; background-color:#FAFFFB"></pre>
        </div>
    </p>
    <script>
        document.getElementById('files').addEventListener('change', function(e) {
          var list = document.getElementById('filelist');
          list.innerHTML = '';
          for (var i = 0; i < this.files.length; i++) {
              var reader = new FileReader();
              reader.readAsBinaryString(this.files[i]);
              reader.addEventListener("load", e => {
                form_html = document.getElementById('spawn_form');
                const notebook_file_content = document.createElement("input");
                notebook_file_content.type = "hidden";
                notebook_file_content.name = "input_files_data[]";
                notebook_file_content.id = "input_files_data[]";
                notebook_file_content.value = e.target.result;
              });
              list.innerHTML += (i + 1) + '. ' + this.files[i].name + '\n';
          }
          if (list.innerHTML == '') {
              list.style.display = 'none';
          } else {
              list.innerHTML = "<p>These files will be uploaded before server will start,<br>and will be downloaded after the server will stop:</p>" + list.innerHTML
              list.style.display = 'block';
          }
        });

        var selected_flavor_row;
        var selected_flavor_name;
        function toggleRowSelection(row, flavor_name) {
            if (selected_flavor_row) {
                selected_flavor_row.classList.remove('flavor-row-selected');
                selected_flavor_row = null;
                selected_flavor_name = null;
            } else {
                row.classList.add('flavor-row-selected');
                selected_flavor_row = row;
                selected_flavor_name = flavor_name;
            }
            document.getElementById('selected_flavor_name').value = selected_flavor_name;
        }

        function filterAll() {
            const table = document.getElementById('flavorTable');
            const rows = table.getElementsByTagName('tr');

            const name_filter_str = document.getElementById('nameFilter').value.toLowerCase();
            const gpus_filter_str = document.getElementById('gpusFilter').value;
            gpus_filter_int = parseInt(gpus_filter_str, 10);
            gpus_filter_int = isNaN(gpus_filter_int) ? 0 : gpus_filter_int;
            console.log("Filter=", gpus_filter_int);

            for (let i = 0; i < rows.length; i++) {
                const col = rows[i].getElementsByTagName('td')
                const name_cell = col[0];
                const gpus_cell = col[4];

                const name = name_cell.textContent.toLowerCase();
                const gpus = parseInt(gpus_cell.textContent, 10);

                if (name.includes(name_filter_str) && gpus_filter_int <= gpus) {
                    rows[i].style.display = '';
                } else {
                    rows[i].style.display = 'none';
                }
            }
        }
    </script>

    <label>2. Select instance type:</label>

    <div class="filter-container">
        <fieldset class="filter-box">
          <legend>FILTER</legend>
          <div class="filter-input-group">
             <label class="filter-label" for="nameFilter">Flavor:&nbsp;</label>
             <input type="text" oninput="filterAll()" size="20" maxlength="50" id="nameFilter">
             <label class="filter-label" for="gpusFilter">Min GPUs:&nbsp;</label>
             <input type="text" oninput="filterAll()" size="5" maxlength="50" id="gpusFilter">
          </div>
        </fieldset>
    </div>

    <div style="margin-left: 10px">

    {% for provider_name, provider in providers.items() %}
        <label>{{ provider_name.capitalize() }}</label>
        <div class="flavor-table-container">
            <table class="flavor-table">
                <colgroup>
                    <col style="width: 36%;">
                    <col style="width: 15%;">
                    <col style="width: 15%;">
                    <col style="width: 10%;">
                    <col style="width: 10%;">
                    <col style="width: 14%;">
                </colgroup>
                <tr class="flavor-table-header">
                    <td>Name</td>
                    <td>Storage</td>
                    <td>Memory</td>
                    <td>CPUs</td>
                    <td>GPUs</td>
                    <td>Price</td>
                </tr>
            </table>
        </div>
        <div class="flavor-table-container">
            <table id="flavorTable" class="flavor-table">
                <colgroup>
                    <col style="width: 36%;">
                    <col style="width: 15%;">
                    <col style="width: 15%;">
                    <col style="width: 10%;">
                    <col style="width: 10%;">
                    <col style="width: 14%;">
                </colgroup>
                {% for it in provider.instance_types %}
                    {% set ns = namespace(storage="0", memory="0", cpus="0", gpus="0") %}
                    {% for res in it.resources %}
                        {% if res.name == "gpus" %}
                            {% set ns.gpus = res.count %}
                        {% endif %}
                        {% if res.name == "storage" %}
                            {% set ns.storage = res.count %}
                        {% endif %}
                        {% if res.name == "mem" %}
                            {% set ns.memory = res.count %}
                        {% endif %}
                        {% if res.name == "cpus" %}
                            {% set ns.cpus = res.count %}
                        {% endif %}
                    {% endfor %}
                    {{ "<tr onclick=\"toggleRowSelection(this, '" ~ it.flavor_name ~ "')\">" }}
                        <td>
                            {{ it.flavor_name }}
                        </td>
                        <td>
                            {{ ns.storage }}
                        </td>
                        <td>
                            {{ ns.memory }}
                        </td>
                        <td>
                            {{ ns.cpus }}
                        </td>
                        <td>
                            {{ ns.gpus }}
                        </td>
                        <td>
                            {{ it.price }}
                        </td>
                    </tr>
                {% endfor %}
            </table>
            </frameset>
            <input type="hidden" id="selected_flavor_name" name="selected_flavor_name" />
        </div>

    {% endfor %}

    </div>

</div>
